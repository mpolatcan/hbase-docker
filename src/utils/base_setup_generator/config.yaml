base_dockerfile_template: |
  ARG JAVA_VERSION=""

  FROM openjdk:${{JAVA_VERSION}}-slim

  MAINTAINER Mutlu Polatcan <mutlupolatcan@gmail.com>

  ARG HADOOP_VERSION=""
  ARG HADOOP_DOWNLOAD_LINK="http://www-eu.apache.org/dist/hadoop/common/hadoop-${{HADOOP_VERSION}}/hadoop-${{HADOOP_VERSION}}.tar.gz"
  ARG HTRACE_DOWNLOAD_LINK="https://repo1.maven.org/maven2/org/apache/htrace/htrace-core/3.2.0-incubating/htrace-core-3.2.0-incubating.jar"

  ENV HDUSER_HOME "/home/hduser"
  ENV HBASE_HOME="${{HDUSER_HOME}}/hbase" \
      PHOENIX_HOME="${{HDUSER_HOME}}/phoenix" \
      EXT_LIBS_HOME="${{HDUSER_HOME}}/ext_libs"
  ENV HBASE_CONF_DIR="${{HBASE_HOME}}/conf" \
      PATH=$PATH:${{HBASE_HOME}}/bin:${{PHOENIX_HOME}}/bin \
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{EXT_LIBS_HOME}}/hadoop_native_libs \
      HBASE_DAEMONS="NULL" \
      HBASE_MANAGES_ZK="false" \
      HBASE_HEAP_SIZE="NULL" \
      HBASE_OFFHEAP_SIZE="NULL" \
      DFS_NAMENODE_CONN_RETRY_INTERVAL="5" \
  {env_vars}

  ADD entrypoint.sh ${{HDUSER_HOME}}/hbase_entrypoint.sh
  ADD config_loader.sh ${{HDUSER_HOME}}/hbase_config_loader.sh

  RUN apt-get update && \
      # Install core dependencies
      apt-get -y install --no-install-recommends procps \
                                                 nano \
                                                 wget \
                                                 rsync \
                                                 gcc \
                                                 g++ \
                                                 unzip \
                                                 iputils-ping \
                                                 telnet \
                                                 netcat \
                                                 net-tools \
                                                 python && \
      # Remove apt cache
      rm -rf /var/lib/apt/lists/* && \
      # Add Hadoop group and user to system
      addgroup hadoop && adduser --disabled-password --gecos "" --ingroup hadoop hduser && \
      # Create directories for installations of HBase, Phoenix and
      mkdir -p ${{HBASE_HOME}} ${{PHOENIX_HOME}} ${{EXT_LIBS_HOME}} ${{EXT_LIBS_HOME}}/hadoop_native_libs ${{EXT_LIBS_HOME}}/htrace && \
      # Download Hadoop to take native libraries of Hadoop and HTrace library which it is dependency of Apache Phoenix
      wget ${{HADOOP_DOWNLOAD_LINK}} ${{HTRACE_DOWNLOAD_LINK}} && \
      # Extract Hadoop from tar file
      tar -xvzf hadoop-${{HADOOP_VERSION}}.tar.gz -C ${{HDUSER_HOME}} && \
      # Move Hadoop native libraries to defined folder which its location /home/hduser/ext_libs/hadoop_native_libs
      mv ${{HDUSER_HOME}}/hadoop-${{HADOOP_VERSION}}/lib/native/* ${{EXT_LIBS_HOME}}/hadoop_native_libs && \
      # Move HTrace jar file to defined folder which its location /home/hduser/ext_libs/htrace
      mv htrace-core-3.2.0-incubating.jar ${{EXT_LIBS_HOME}}/htrace && \
      # Remove remaining Hadoop files
      rm -r hadoop-${{HADOOP_VERSION}}.tar.gz ${{HDUSER_HOME}}/hadoop-${{HADOOP_VERSION}} && \
      # Set owner of folder /home/hduser to Hadoop user which its name hduser
      chown -R hduser:hadoop ${{HDUSER_HOME}} && \
      # Make scripts executable
      chmod +x ${{HDUSER_HOME}}/hbase_entrypoint.sh ${{HDUSER_HOME}}/hbase_config_loader.sh


config_loader_sh_template: |
  #!/usr/bin/env bash

  function load_config() {{
      if [[ "$2" != "NULL" ]]
          then
              printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$2</value>\n\t</property>\n" >> "${{HBASE_CONF_DIR}}/$3"
      fi
  }}

  function load_config_with_opt() {{
      if [[ "$2" != "NULL" ]]
          then
              printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$3</value>\n\t</property>\n" >> "${{HBASE_CONF_DIR}}/$5"
      else
          printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$4</value>\n\t</property>\n" >> "${{HBASE_CONF_DIR}}/$5"
      fi
  }}

  {load_fn_calls}

config_files:
  - path: hbase_configs/hbase-site.yml
    filename: hbase-site.xml

output_dir: ../../base